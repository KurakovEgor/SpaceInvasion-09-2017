# Nginx configuration template
# To generate and link config use follow commands:
#       $ ./bin/gen_nginx_config --template=../conf/nginx.conf --out=/etc/nginx/sites-available/YOUR_PROJECT_NAME.conf --config=../conf/nginx_conf.ini
#       $ ln -s /etc/nginx/sites-available/YOUR_PROJECT_NAME.conf /etc/nginx/sites-enabled/YOUR_PROJECT_NAME.conf
#       $ service nginx reload
#
# Config file must have follow format:
# ```
# [nginx]
# project=YOUR_PROJECT_NAME
# domain=YOUR_DOMAIN_NAME
# backend_path=unix:/path/to/socket.sock
# frontend_path=domain.com
# static_path=/data/YOUR_PROJECT_NAME/static
# meida_path=/data/YOUR_PROJECT_NAME/media
# error_log=/var/log/YOUR_PROJECT_NAME/nginx_error.log
# access_log=/var/log/YOUR_PROJECT_NAME/nginx_access.log
# max_body_size=10M
# max_body_buffer_size=128K
# server_names_hash_bucket_size=128
# proxy_timeout=90
# proxy_buffers=32
# proxy_buffer_size=10k
# ```

log_format main '$remote_addr - $remote_user [$time_local] $status '
    '"$request" $body_bytes_sent "$http_referer" '
    '"$http_user_agent" "$http_x_forwarded_for"';
error_log %error_log%;
access_log %access_log% main;

server_names_hash_bucket_size %server_names_hash_bucket_size%;

upstream backend {
    server %backend_path%;
}

upstream frontend {
    server %frontend_path%;
}

# Configuration of https-server
server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;

    ssl on;
    ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    ssl_prefer_server_ciphers on;
    ssl_ciphers 'ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-DSS-AES128-GCM-SHA256:kEDH+AESGCM:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES128-SHA:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA:ECDHE-ECDSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-RSA-AES128-SHA:DHE-DSS-AES128-SHA256:DHE-RSA-AES256-SHA256:DHE-DSS-AES256-SHA:DHE-RSA-AES256-SHA:!aNULL:!eNULL:!EXPORT:!DES:!RC4:!3DES:!MD5:!PSK'; 

    ssl_stapling on;
    ssl_stapling_verify on;

    ssl_certificate     /etc/ssl/certs/%project%.crt;
    ssl_certificate_key /etc/ssl/private/%project%.key;

    server_name          www.%domain% %domain%;
    charset              utf-8;
    gzip                 on;

    # Loaded files
    location /media {
        alias %media_path%;
    }

    # Static files
    location /static {
        access_log off;
        alias %static_path%;
    }

    # Other requests redirect into Node.js application
    location / {
        include servers/proxy_params;
        proxy_pass https://frontend;
    }
}

# Configuration of http-server
server {
    listen 80 default_server;
    listen [::]:80 default_server;
    server_name %domain% www.%domain%;
    return 301 https://$server_name$request_uri;
}
